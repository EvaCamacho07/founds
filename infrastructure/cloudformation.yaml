AWSTemplateFormatVersion: '2010-09-09'
Description: 'Infrastructure for BTG Pactual Pension Fund Management System - Simplified Version'

Parameters:
  Environment:
    Type: String
    Default: 'dev'
    AllowedValues: ['dev', 'staging', 'prod']
    Description: 'Environment name for resource naming'
  
  TablePrefix:
    Type: String
    Default: 'btg-pension'
    Description: 'Prefix for DynamoDB table names (matches DYNAMODB_TABLE_PREFIX in .env)'

Resources:
  # DynamoDB Table: Users
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${TablePrefix}-users'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: 'btg-pension-funds'
        - Key: TableType
          Value: 'users'

  # DynamoDB Table: Subscriptions (NOT Transactions)
  SubscriptionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${TablePrefix}-subscriptions'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: subscriptionId
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
        - AttributeName: subscriptionDate
          AttributeType: S
      KeySchema:
        - AttributeName: subscriptionId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: UserSubscriptionsIndex
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
            - AttributeName: subscriptionDate
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: 'btg-pension-funds'
        - Key: TableType
          Value: 'subscriptions'

  # DynamoDB Table: Notifications
  NotificationsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${TablePrefix}-notifications'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: notificationId
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
        - AttributeName: createdAt
          AttributeType: S
      KeySchema:
        - AttributeName: notificationId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: UserNotificationsIndex
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
            - AttributeName: createdAt
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: 'btg-pension-funds'
        - Key: TableType
          Value: 'notifications'

  # IAM Role for DynamoDB Access (if needed for future Lambda functions)
  DynamoDBAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'btg-pension-dynamodb-role-${Environment}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DynamoDBFullAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:BatchGetItem
                  - dynamodb:BatchWriteItem
                Resource:
                  - !GetAtt UsersTable.Arn
                  - !GetAtt SubscriptionsTable.Arn
                  - !GetAtt NotificationsTable.Arn
                  - !Sub '${UsersTable.Arn}/index/*'
                  - !Sub '${SubscriptionsTable.Arn}/index/*'
                  - !Sub '${NotificationsTable.Arn}/index/*'

Outputs:
  UsersTableName:
    Description: 'Name of the Users DynamoDB table'
    Value: !Ref UsersTable
    Export:
      Name: !Sub 'btg-pension-users-table-${Environment}'

  SubscriptionsTableName:
    Description: 'Name of the Subscriptions DynamoDB table'
    Value: !Ref SubscriptionsTable
    Export:
      Name: !Sub 'btg-pension-subscriptions-table-${Environment}'

  NotificationsTableName:
    Description: 'Name of the Notifications DynamoDB table'
    Value: !Ref NotificationsTable
    Export:
      Name: !Sub 'btg-pension-notifications-table-${Environment}'

  DynamoDBRegion:
    Description: 'AWS Region for DynamoDB tables'
    Value: !Ref AWS::Region
    Export:
      Name: !Sub 'btg-pension-region-${Environment}'

  TablePrefix:
    Description: 'Prefix used for table names'
    Value: !Ref TablePrefix
    Export:
      Name: !Sub 'btg-pension-table-prefix-${Environment}'

  SetupCommand:
    Description: 'Command to deploy this stack'
    Value: !Sub |
      aws cloudformation deploy \
        --template-file infrastructure/cloudformation.yaml \
        --stack-name btg-pension-${Environment} \
        --capabilities CAPABILITY_NAMED_IAM \
        --parameter-overrides Environment=${Environment} TablePrefix=${TablePrefix}
